package gui;
import session.SessionManager;
import database.DatabaseUtils;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

/**
 *
 * @author Luisa Eustaquio
 */
public class TransactionDetailsPanel extends javax.swing.JFrame {
    private String loggedInUsername, userRole, transacStatus;
    private int transacID;
    
    /**
     * Creates new form TransactionDetailsPanel
     */
    public TransactionDetailsPanel(int transactionID, String transactionStatus) {
        initComponents();
        this.setLocationRelativeTo(null);
        
        
        getLoggedInUser();
        displayTransactionDetails(transactionID);
        transacStatus = transactionStatus;
        
        System.out.println("Transac Status" + transacStatus);
        adminBtns();
        updateCancelBtn();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        lblDropOffDate = new javax.swing.JLabel();
        lblTotal = new javax.swing.JLabel();
        lblSubmittedDate = new javax.swing.JLabel();
        lblNote = new javax.swing.JLabel();
        lblCompletedDate = new javax.swing.JLabel();
        lblTransacStatus = new javax.swing.JLabel();
        lblPaymentStatus = new javax.swing.JLabel();
        lblName = new javax.swing.JLabel();
        lblDeliveryMethod = new javax.swing.JLabel();
        btnApproveTransac = new javax.swing.JButton();
        lblContact = new javax.swing.JLabel();
        btnCancelTransac = new javax.swing.JButton();
        lblAddress = new javax.swing.JLabel();
        lblTransactionID = new javax.swing.JLabel();
        lblKilo = new javax.swing.JLabel();
        btnBack = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblService = new javax.swing.JLabel();
        lblAddOn = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        lblDropOffDate.setText("jLabel3");

        lblTotal.setText("jLabel3");

        lblSubmittedDate.setText("jLabel3");

        lblNote.setText("jLabel3");

        lblCompletedDate.setText("jLabel3");

        lblTransacStatus.setText("jLabel3");

        lblPaymentStatus.setText("jLabel3");

        lblName.setText("jLabel1");

        lblDeliveryMethod.setText("jLabel3");

        btnApproveTransac.setBackground(new java.awt.Color(204, 255, 204));
        btnApproveTransac.setText("Approve Transaction");
        btnApproveTransac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnApproveTransacActionPerformed(evt);
            }
        });

        lblContact.setText("jLabel2");

        btnCancelTransac.setBackground(new java.awt.Color(255, 0, 0));
        btnCancelTransac.setText("Cancel Transaction");
        btnCancelTransac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelTransacActionPerformed(evt);
            }
        });

        lblAddress.setText("jLabel3");

        lblTransactionID.setText("jLabel1");

        lblKilo.setText("jLabel3");

        btnBack.setText("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        lblService.setText("jLabel1");

        lblAddOn.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblTransactionID)
                    .addComponent(lblCompletedDate)
                    .addComponent(lblSubmittedDate)
                    .addComponent(lblDropOffDate)
                    .addComponent(lblNote)
                    .addComponent(lblTotal)
                    .addComponent(lblKilo)
                    .addComponent(lblAddress)
                    .addComponent(lblContact)
                    .addComponent(lblName))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(120, 120, 120)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblPaymentStatus)
                                    .addComponent(lblTransacStatus)))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(81, 81, 81)
                                .addComponent(lblDeliveryMethod))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(193, 193, 193)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnApproveTransac)
                                    .addComponent(btnCancelTransac))))
                        .addContainerGap(268, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnBack)
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(btnUpdate)
                                .addGap(108, 108, 108))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblService)
                            .addComponent(lblAddOn))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnDelete)
                        .addGap(99, 99, 99))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblTransactionID)
                            .addComponent(btnBack))
                        .addGap(31, 31, 31)
                        .addComponent(lblName)
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(lblDeliveryMethod)
                                .addGap(8, 8, 8)
                                .addComponent(lblAddress)
                                .addGap(10, 10, 10)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblKilo)
                                        .addGap(14, 14, 14)
                                        .addComponent(lblTotal))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(lblTransacStatus)
                                        .addGap(33, 33, 33)
                                        .addComponent(lblPaymentStatus)))
                                .addGap(26, 26, 26)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblNote)
                                    .addComponent(btnUpdate))
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(lblDropOffDate)
                                            .addComponent(btnDelete))
                                        .addGap(23, 23, 23)
                                        .addComponent(lblSubmittedDate)
                                        .addGap(35, 35, 35)
                                        .addComponent(lblCompletedDate))
                                    .addGroup(layout.createSequentialGroup()
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(lblService)
                                        .addGap(18, 18, 18)
                                        .addComponent(lblAddOn))))
                            .addComponent(lblContact)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(47, 47, 47)
                        .addComponent(btnApproveTransac)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnCancelTransac)))
                .addContainerGap(135, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void getLoggedInUser() {
        loggedInUsername = SessionManager.getLoggedInUser();
        userRole = SessionManager.getRoleByUsername(loggedInUsername);
    }
    
    private void updateCancelBtn() {
        switch (userRole) {
            case "admin":
                btnCancelTransac.setText("Cancel Transaction");
                break;
            default:
                System.out.println("Transac Status" + transacStatus);
                switch (transacStatus) {
                    case "approved":
                        btnCancelTransac.setText("Request Cancel Transaction");
                        break;
                    case "request cancel":
                        btnCancelTransac.setText("Requested Cancel");
                        break;
                    case "cancelled":
                        btnCancelTransac.setVisible(false);
                        break;
                    default:
                        btnCancelTransac.setText("Cancel Transaction");
                        break;
                }
                break;
        }
        
    }
    
    private void adminBtns() {
        System.out.println("User Role: " + userRole);
        switch (userRole) {
            case "admin":
                btnApproveTransac.setVisible(true);
                switch (transacStatus) {
                    case "approved":
                        btnApproveTransac.setVisible(false);
                        btnCancelTransac.setVisible(true);
                        btnUpdate.setVisible(true);
                        btnDelete.setVisible(false);
                        break;
                    case "cancelled":
                        btnApproveTransac.setVisible(false);
                        btnCancelTransac.setVisible(false);
                        btnDelete.setVisible(true);
                        btnUpdate.setVisible(false);
                        break;
                    default:
                        btnUpdate.setVisible(false);
                        btnDelete.setVisible(false);
                        break;
                }
                break;
            default:
                btnApproveTransac.setVisible(false);
                btnUpdate.setVisible(false);
                btnDelete.setVisible(false);
                break;
        }
        
        
    }
    
    private void btnApproveTransacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnApproveTransacActionPerformed
        switch (transacStatus) {
            case "pending":
                int option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to approve this transaction?", "Approve Transaction", javax.swing.JOptionPane.YES_NO_OPTION);
                if (option == javax.swing.JOptionPane.YES_OPTION) {
                    updateTransactionStatus("approved");
                    headToAdminPanel();
                }
                break;
            case "cancelled":
                btnApproveTransac.setVisible(false);
                break;
            case "request cancel":
                option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to approve this transaction? Customer is requesting cancellation.", "Approve Transaction", javax.swing.JOptionPane.YES_NO_OPTION);
                if (option == javax.swing.JOptionPane.YES_OPTION) {
                    updateTransactionStatus("approved");
                    headToAdminPanel();
                }
                break;
            default:
                javax.swing.JOptionPane.showMessageDialog(this, "You cannot approve this transaction because it is already approved or under process.", "Okay", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                break;
        }
    }//GEN-LAST:event_btnApproveTransacActionPerformed

    private void btnCancelTransacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelTransacActionPerformed
        switch (userRole) {
            case "customer":
            switch (transacStatus) {
                case "pending":
                    int option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel this transaction?", "Cancel Transaction", javax.swing.JOptionPane.YES_NO_OPTION);
                    if (option == javax.swing.JOptionPane.YES_OPTION) {
                        updateTransactionStatus("cancelled");
                        headToCustomerPanel();
                    }
                    break;
                case "approved":
                    option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to request cancel for this transaction?", "Request Cancel", javax.swing.JOptionPane.YES_NO_OPTION);
                    if (option == javax.swing.JOptionPane.YES_OPTION) {
                        updateTransactionStatus("request cancel");
                        headToCustomerPanel();
                    }
                    break;
                default:
                    javax.swing.JOptionPane.showMessageDialog(this, "You cannot cancel this transaction because it is already cancelled or under process by the admin.", "Okay", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                    break;
            }
            break;
            case "admin":
                if (!transacStatus.equals("cancelled")) {
                    int option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to cancel this transaction?", "Cancel Transaction", javax.swing.JOptionPane.YES_NO_OPTION);
                    if (option == javax.swing.JOptionPane.YES_OPTION) {
                        updateTransactionStatus("cancelled");
                        headToAdminPanel();
                    }
                } else {
                    javax.swing.JOptionPane.showMessageDialog(this, "This transaction is already cancelled.", "Cancel Transaction", javax.swing.JOptionPane.INFORMATION_MESSAGE);
                }
                break;
            default:
                break;
        }
    }//GEN-LAST:event_btnCancelTransacActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        switch (userRole) {
            case "admin":
                headToAdminPanel();
                break;
            default:
                headToCustomerPanel();
                break;
        }
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        UpdateTransacDetailsPanel updateTransacDetailsPanel = new UpdateTransacDetailsPanel(transacID);
        updateTransacDetailsPanel.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        int option = javax.swing.JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this transaction?", "Delete Transaction", javax.swing.JOptionPane.YES_NO_OPTION);
        if (option == javax.swing.JOptionPane.YES_OPTION) {
            try (Connection conn = DatabaseUtils.getConnection()) {
                int customerID = 0;
                try (PreparedStatement customerIdStmt = conn.prepareStatement("SELECT c_id FROM tbl_transactions WHERE t_id = ?")) {
                    customerIdStmt.setInt(1, transacID);
                    try (ResultSet rs = customerIdStmt.executeQuery()) {
                        if (rs.next()) {
                            customerID = rs.getInt("c_id");
                        }
                    }
                }

                try (PreparedStatement transactionStmt = conn.prepareStatement("DELETE FROM tbl_transactions WHERE t_id = ?")) {
                    transactionStmt.setInt(1, transacID);
                    int rowsDeleted = transactionStmt.executeUpdate();
                    if (rowsDeleted > 0) {
                        System.out.println("Transaction with ID " + transacID + " deleted successfully.");
                        javax.swing.JOptionPane.showMessageDialog(this, "Transaction deleted successfully!", "Success", javax.swing.JOptionPane.INFORMATION_MESSAGE);

                        if (customerID != 0) {
                            try (PreparedStatement customerStmt = conn.prepareStatement("DELETE FROM tbl_customers WHERE c_id = ?")) {
                                customerStmt.setInt(1, customerID);
                                customerStmt.executeUpdate();
                            }
                        }

                        headToAdminPanel();
                    }
                }
            } catch (SQLException ex) {
                ex.printStackTrace();
            }
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    private void headToAdminPanel() {
        AdminPanel adminPanel = new AdminPanel();
        adminPanel.setVisible(true);
        this.dispose();
    }
    
    private void headToCustomerPanel() {
        CustomerPanel customerPanel = new CustomerPanel();
        customerPanel.setVisible(true);
        this.dispose();
    }
    
    private void updateTransactionStatus(String newStatus) {
        try (Connection conn = DatabaseUtils.getConnection();
             PreparedStatement stmt = conn.prepareStatement("UPDATE tbl_transactions SET t_transacStatus = ? WHERE t_id = ?")) {
            stmt.setString(1, newStatus);
            stmt.setInt(2, transacID);
            int rowsUpdated = stmt.executeUpdate();
            if (rowsUpdated > 0) {
                System.out.println("Transaction status updated successfully!");
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    private void displayTransactionDetails(int transactionID) {
        transacID = transactionID;
        try (Connection conn = DatabaseUtils.getConnection();
            PreparedStatement stmt = conn.prepareStatement("SELECT c.c_name, c.c_contact, c.c_address, t.s_id, t.a_id, s.s_name, a.a_name, t.t_dropOffDate, t.t_deliveryMethod, t.t_submittedDate, t.t_completedDate, t.t_kilo, t.t_total, t.t_note, t.t_transacStatus, t.t_paymentStatus "
                    + "FROM tbl_transactions t "
                    + "INNER JOIN tbl_customers c ON t.c_id = c.c_id "
                    + "INNER JOIN tbl_services s ON t.s_id = s.s_id "
                    + "INNER JOIN tbl_addOns a ON t.a_id = a.a_id "
                    + "WHERE t.t_id = ?")) {
            stmt.setInt(1, transactionID);
            try (ResultSet rs = stmt.executeQuery()) {
                if (rs.next()) {
                    String name = rs.getString("c_name");
                    String contact = rs.getString("c_contact");
                    String address = rs.getString("c_address");
                    String dropOffDate = rs.getString("t_dropOffDate");
                    String deliveryMethod = rs.getString("t_deliveryMethod");
                    String submittedDate = rs.getString("t_submittedDate");
                    String completedDate = rs.getString("t_completedDate");
                    String service = rs.getString("s_name");
                    String addOn = rs.getString("a_name");
                    String kilo = rs.getString("t_kilo");
                    String total = rs.getString("t_total");
                    String note = rs.getString("t_note");
                    String transactionStatus = rs.getString("t_transacStatus");
                    String paymentStatus = rs.getString("t_paymentStatus");

                    lblTransactionID.setText(String.valueOf(transactionID));
                    lblName.setText(name);
                    lblContact.setText(contact);
                    lblAddress.setText(address);
                    lblDeliveryMethod.setText(deliveryMethod);
                    lblDropOffDate.setText(dropOffDate);
                    lblSubmittedDate.setText(submittedDate);
                    lblCompletedDate.setText(completedDate);
                    lblService.setText(service);
                    lblAddOn.setText(addOn);
                    lblKilo.setText(kilo);
                    lblTotal.setText(total);
                    lblNote.setText(note);
                    lblTransacStatus.setText(transactionStatus);
                    lblPaymentStatus.setText(paymentStatus);
                }
            }
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TransactionDetailsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TransactionDetailsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TransactionDetailsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TransactionDetailsPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                int transactionID = 0;
                String transactionStatus = "";
                new TransactionDetailsPanel(transactionID, transactionStatus).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnApproveTransac;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnCancelTransac;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel lblAddOn;
    private javax.swing.JLabel lblAddress;
    private javax.swing.JLabel lblCompletedDate;
    private javax.swing.JLabel lblContact;
    private javax.swing.JLabel lblDeliveryMethod;
    private javax.swing.JLabel lblDropOffDate;
    private javax.swing.JLabel lblKilo;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblNote;
    private javax.swing.JLabel lblPaymentStatus;
    private javax.swing.JLabel lblService;
    private javax.swing.JLabel lblSubmittedDate;
    private javax.swing.JLabel lblTotal;
    private javax.swing.JLabel lblTransacStatus;
    private javax.swing.JLabel lblTransactionID;
    // End of variables declaration//GEN-END:variables
}
